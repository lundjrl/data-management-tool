{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */
    /* Language and Environment */
    "lib": ["ESNext"],
    "target": "ES2021" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "jsx": "react" /* Specify what JSX code is generated. */,
    // "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */
    "jsxFactory": "Html.createElement" /* Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'. */,
    "jsxFragmentFactory": "Html.Fragment" /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'. */,
    // "noLib": true /* Disable including any library files, including the default lib.d.ts. */,
    // "useDefineForClassFields": true,                  /* Emit ECMAScript-standard-compliant class fields. */
    // "moduleDetection": "auto",                        /* Control what method is used to detect module-format JS files. */
    "baseUrl": ".",
    "rootDir": "./",
    /* Modules */
    "module": "ES2022" /* Specify what module code is generated. */,
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "plugins": [{ "name": "@kitajs/ts-html-plugin" }],
    "noImplicitAny": true,
    "noImplicitReturns": false,
    "noImplicitThis": true,
    "paths": {
      "~/*": ["./src/*"]
    },
    "isolatedModules": true,
    "types": [] /* Specify type package names to be included without being referenced in a source file. */,
    // "emitBOM": true /* Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "preserveSymlinks": false /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "noEmit": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true
  },
  "include": ["*.ts", "**/*.ts", "**/*.tsx", "*.json"],
  "exclude": ["node_modules", "dist", "node_modules/elysia/dist"]
}
